// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import dto "goseed/modules/user/delivery/dto"
import mock "github.com/stretchr/testify/mock"
import models "goseed/models"

// Usecase is an autogenerated mock type for the Usecase type
type Usecase struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *Usecase) Create(_a0 *dto.UserCreation) (*models.User, error) {
	ret := _m.Called(_a0)

	var r0 *models.User
	if rf, ok := ret.Get(0).(func(*dto.UserCreation) *models.User); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*dto.UserCreation) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Login provides a mock function with given fields: name, password
func (_m *Usecase) Login(name string, password []byte) (bool, error) {
	ret := _m.Called(name, password)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, []byte) bool); ok {
		r0 = rf(name, password)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, []byte) error); ok {
		r1 = rf(name, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
